export function useColorPicker(value: any, onChange: any): {
    setLinear: () => void;
    setRadial: () => void;
    setDegrees: (newDegrees: any) => void;
    setSolid: (startingColor: any) => void;
    setGradient: (startingGradiant: any) => void;
    setR: (newR: any) => void;
    setG: (newG: any) => void;
    setB: (newB: any) => void;
    setA: (newA: any) => void;
    setHue: (newHue: any) => void;
    setSaturation: (newSat: any) => void;
    setLightness: (newLight: any) => void;
    valueToHSL: () => string;
    valueToHSV: () => string;
    valueToHex: () => string;
    valueToCmyk: () => string;
    setSelectedPoint: (index: any) => void;
    addPoint: (left: any) => void;
    deletePoint: (index: any) => void;
    selectedPoint: any;
    isGradient: any;
    gradientType: string | undefined;
    degrees: number;
    setPointLeft: (left: any) => void;
    currentLeft: any;
    rgbaArr: number[];
    hslArr: number[];
    previousColors: never[];
    getGradientObject: () => {
        isGradient: boolean;
        gradientType: string | undefined;
        degrees: string;
        colors: any;
    } | {
        isGradient: boolean;
        gradientType: null;
        degrees: null;
        colors: any;
    } | undefined;
};
